@model BuildAdminPanelAspNetCore.Areas.SA.Models.BEL.RoleInSoftwareMasterBEL

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/css/customcss/checkboxbutton.css" rel="stylesheet" />
<div class="container p-3">

    <div class="card">

        <form id="roleFormPermission" method="post">
            <div class="card-header bg-secondary text-white text-center">
                <h5>Role In Form Permission</h5>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label asp-for="RoleID" class="form-label mt-4">Role</label>
                    <select asp-for="RoleID" id="RoleID" name="RoleID" class="form-control select2" style="width: 100%;">
                        @*<option disabled selected>---Select Role---</option>*@
                    </select>
                    <span asp-validation-for="RoleID" class="text-danger"></span>
                </div>
                <table id="tblData" class="table table-bordered table-striped table-responsive" cellspacing="0" style="width:100%">

                    @*<table id="tblData" class="table table-bordered table-striped table-responsive" style="width:100%">*@
                    <thead class="thead-dark">
                        <tr class="text-center">
                            <th>Menu Id</th>
                            <th>Menu Name</th>
                            <th>Submenu Id</th>
                            <th>Submenu Name </th>
                            <th>Form Id </th>
                            <th>Form Name </th>
                            <th>Form URL </th>
                            <th>Save Permission </th>
                            <th>Edit Permission </th>
                            <th>View Permission</th>
                            <th>Delete Permission </th>
                        </tr>
                    </thead>
                </table>
            </div>
            <div class="card-footer text-muted">
                <button type="submit" class="btn btn-primary" style="width:300px">Save</button>
            </div>
        </form>
    </div>


</div>

@section Scripts{
    @*<script src="~/js/form.js">*@
    <script>
        var dataTable;

        $(document).ready(function () {
            loadDataTable();

        });

        $('#RoleID').change(function () {
            loadDataTable();
        });

        function loadDataTable() {
            var id = $('#RoleID').val();
            $.ajax({
                url: '/SA/RoleInFormPermission/GetRoleInFormPermissionList?RoleID=' + id,
                type: 'POST',
                dataType: 'json',
                success: OnSuccess
            })
        }

        function OnSuccess(response) {
            console.log(response);
            dataTable = $('#tblData').DataTable({
                bProcessing: true,
                lengthChange: true,
                //lengthMenu: [[5, 10, 25, -1], [5, 10, 25, "All"]],
                bfilter: true,
                bSort: true,
                destroy: true,
                bPaginate: true,
                //autoWidth:true,
                data: response,
                "columnDefs": [
                    //{ "orderable": false, "targets": 3 },
                    { "visible": false, "targets": [0,2,4,6] },
                    //{ "width": "200px", "targets":1 }
                ],
                responsive: true,
                "responsive.columns.adjust": true,
                columns: [
                    /*           { "data": "formID", "width": "15%" },*/
                    { "data": "softwareID" },
                    //{ 'visible': false, 'targets': [0] },
                    //{
                    //    'data': null,
                    //    render: function (data, type, row) {
                    //        return '<input type="hidden" id="SoftwareID_' + row.sl + '" class="form-control text-right" tabindex="7" required="" aria-required="true" value= ' + row.softwareID + '>';
                    //    }
                    //},
                    //{
                    //    'data': 'softwareID',
                    //    render: function (data, type, row) {
                    //        return '<input type="text" name="Batch_No[]" id="Batch_No_' + row.sl + '" class="form-control text-right" tabindex="7" placeholder="Batch ID" required="" aria-required="true" value= ' + data + '>';
                    //    }
                    //},
                    //{ "data": "softwareName", "width": "15%",
                    //    render: function (data, type, row) {
                    //        return '<input type="text" class="form-control text-right" tabindex="7" required="" readonly aria-required="true" value= ' + row.softwareName + '><input type="hidden" id="SoftwareID_' + row.sl + '" class="form-control text-right" tabindex="7" required="" aria-required="true" value= ' + row.softwareID + '>';
                    //          }
                    //},
                    //{ "data": "softwareName", "width": "30%" },
                    //{ "data": "softwareName", "width": "30%" },
                    {
                        data: 'softwareName',
                        render: function (data, type, row) {
                          return row.softwareName;
                        }, "width": "30%"
                    },
                    { "data": "moduleID" },
                    //{
                    //    'data': 'moduleID',
                    //    render: function (data, type, row) {
                    //        return '<input type="text" id="ModuleID_' + row.sl + '" class="form-control text-right" tabindex="7" required="" aria-required="true" value= ' + data + '>';
                    //    }
                    //},
                    //{
                    //    "data": "moduleName", "width": "15%",
                    //    render: function (data, type, row) {
                    //        return '<input type="text" class="form-control text-right" tabindex="7" required="" readonly aria-required="true" value= ' + row.moduleName + '><input type="hidden" id="ModuleID_' + row.sl + '" class="form-control text-right" tabindex="7" required="" aria-required="true" value= ' + row.moduleID + '>';
                    //    }
                    //},
                    { "data": "moduleName", "width": "30%" },
                    { "data": "formID"},
                    { "data": "formName", "width": "30%"},
                    { "data": "formURL"},
                    //{ "data": "confirmPassword", "width": "15%" },
                    {
                        data: 'savePermission',
                        render: function (data, type, row) {
                            if (row.savePermission === true) {
                                //return '<input type="checkbox" class="checkbox" value="' + data + '" checked>';
                                return '<div class="cat action"><label><input type="checkbox" id="SavePermission_' + row.sl + '" class="checkbox" value="' + data + '" checked><span>Select</span></label> </div>'
                            } else {
                                //return '<input type="checkbox" class="checkbox" value="' + data + '">';
                                return '<div class="cat action"><label><input type="checkbox" id="SavePermission_' + row.sl + '" class="checkbox" value="' + data + '"><span>Select</span></label> </div>'
                            }
                        }, "width": "15%"
                       
                    },
                                 {
                        data: 'editPermission',
                        render: function (data, type, row) {
                            if (row.editPermission === true) {
                                //return '<input type="checkbox" class="checkbox" value="' + data + '" checked>';
                                return '<div class="cat action"><label><input type="checkbox" id="EditPermission_' + row.sl + '" class="checkbox" value="' + data + '" checked><span>Select</span></label> </div>'
                            } else {
                                //return '<input type="checkbox" class="checkbox" value="' + data + '">';
                                return '<div class="cat action"><label><input type="checkbox" id="EditPermission_' + row.sl + '" class="checkbox" value="' + data + '"><span>Select</span></label> </div>'
                            }
                        },"width": "15%"
                        
                    },
                    {
                        data: 'viewPermission',
                        render: function (data, type, row) {
                            if (row.viewPermission === true) {
                                //return '<input type="checkbox" class="checkbox" value="' + data + '" checked>';
                                return '<div class="cat action"><label><input type="checkbox" id="ViewPermission_' + row.sl + '" class="checkbox" value="' + data + '" checked><span>Select</span></label> </div>'
                            } else {
                                //return '<input type="checkbox" class="checkbox" value="' + data + '">';
                                return '<div class="cat action"><label><input type="checkbox" id="ViewPermission_' + row.sl + '" class="checkbox" value="' + data + '"><span>Select</span></label> </div>'
                            }
                        }, "width": "15%"
                       
                    },
                    {
                        data: 'deletePermission',
                        render: function (data, type, row) {
                            if (row.deletePermission === true) {
                                //return '<input type="checkbox" class="checkbox" value="' + data + '" checked>';
                                return '<div class="cat action"><label><input type="checkbox" id="DeletePermission_' + row.sl + '" class="checkbox" value="' + data + '" checked><span>Select</span></label> </div>'
                            } else {
                                //return '<input type="checkbox" class="checkbox" value="' + data + '">';
                                return '<div class="cat action"><label><input type="checkbox" id="DeletePermission_' + row.sl + '" class="checkbox" value="' + data + '"><span>Select</span></label> </div>'
                            }
                        }, "width": "15%"
                        
                    }
                ]
            });

            // Make all columns resizable
            //dataTable.columns().every(function () {
            //    var column = this;

            //    // Make the column header resizable
            //    $(column.header()).resizable({
            //        handles: 'e', // Only allow resizing from the right edge
            //        start: function (event, ui) {
            //            // Store the original width for later use
            //            column.data('origWidth', column.width());
            //        },
            //        resize: function (event, ui) {
            //            // Adjust the column width as the user resizes
            //            column.width(ui.size.width);
            //        },
            //        stop: function (event, ui) {
            //            // Store the new width in case you need it
            //            var newWidth = column.width();
            //            console.log('Column width changed from ' + column.data('origWidth') + ' to ' + newWidth);
            //        }
            //    });
            //});
        }
        $("#roleFormPermission").submit(function (event) {

            var detailArr = [];
            detailArr.length = 0;
            var b = 0;
            $.each($("#tblData tbody tr"), function () {
                var saveCheckboxValue = $('#SavePermission_' + b).val();
                var saveCheckboxClick = $('#SavePermission_' + b).is(':checked')
                if (saveCheckboxClick == true) {
                    saveCheckboxValue = "True"
                }
                else {
                    saveCheckboxValue = "False"
                }
                var editCheckboxValue = $('#EditPermission_' + b).val();
                var editCheckboxClick = $('#EditPermission_' + b).is(':checked')
                if (editCheckboxClick == true) {
                    editCheckboxValue = "True"
                }
                else {
                    editCheckboxValue = "False"
                }
                var viewCheckboxValue = $('#ViewPermission_' + b).val();
                var viewCheckboxClick = $('#ViewPermission_' + b).is(':checked')
                if (viewCheckboxClick == true) {
                    viewCheckboxValue = "True"
                }
                else {
                    viewCheckboxValue = "False"
                }
                var deleteCheckboxValue = $('#DeletePermission_' + b).val();
                var deleteCheckboxClick = $('#DeletePermission_' + b).is(':checked')
                if (deleteCheckboxClick == true) {
                    deleteCheckboxValue = "True"
                }
                else {
                    deleteCheckboxValue = "False"
                }
                var hiddenSoftwareID = $("#tblData").DataTable().column(0).data();
                var hiddenModuleID = $("#tblData").DataTable().column(2).data();
                var hiddenFormID = $("#tblData").DataTable().column(4).data();

                detailArr.push({
                    //SoftwareID: $('#SoftwareID_' + b).val(),
                    //ModuleID: $('#ModuleID_' + b).val(),
                    SoftwareID: hiddenSoftwareID[b],
                    ModuleID: hiddenModuleID[b],
                    FormID: hiddenFormID[b],
                    //IsActive: rowData.isActive,
                    SavePermission: saveCheckboxValue,
                    EditPermission: editCheckboxValue,
                    ViewPermission: viewCheckboxValue,
                    DeletePermission: deleteCheckboxValue,
                });
                console.log(detailArr);
                b = b + 1;
            });

            //var input = InputValidation('Quantity_' + row) + InputValidation('Medicine_Name_' + row);
            //if (input == 0) {
            var formData = {
                RoleID: $("#RoleID").val(),
                DetailList: detailArr
            };
            //}

            //alert($("#Status").val());
            $.ajax({
                type: "POST",
                url: '@Url.Action("OperationsMode", "RoleInFormPermission")',
                data: formData,
                dataType: "json",
                encode: true,
            }).done(function (response) {
                //console.log(response);
                //alert(response.status);
                if (response.status == 'Yes') {

                    toastr.success('Data saved successfully');
                }
                //alert("saved");

                //window.location.href = "/Transaction/Purchase?from=edit";

                //toastr.success('Current Day & Time');
                //alert("successfully updated");
                //location.assign('@Url.Action("_ManagePurchase")');
                //location.reload();
            });

            event.preventDefault();

        });
        LoadRole();
        //LoadEmployee();
        //Initialize Select2 Elements
        $('.select2').select2()

        ////Initialize Select2 Elements
        $('.select2bs4').select2({
            theme: 'bootstrap4'
        })
        function LoadRole() {
            $.ajax({
                url: '/SA/UserInRole/GetRoles',
                success: function (data) {
                    $.each(data.data, function (i, item) {
                        //console.log(data.data);
                        //console.log(item);
                        $("#RoleID").append($('<option>', {
                            value: item.value,
                            text: item.text
                        }));
                        //$('#RoleID').append('<Option value=' + item.roleID + '>' + item.roleName + '</Option>');
                    });
                }
            });
        }


        //function changeStatuse(sl) {
        //    //var isActive = $('#IsActive_' + sl).val();
        //    var isActiveCheckboxValue = $('#IsActive_' + sl).val();
        //    var isActiveCheckboxClick = $('#IsActive_' + sl).is(':checked')
        //    if (isActiveCheckboxClick == true) {
        //        isActiveCheckboxValue = "True"
        //    }
        //    else {
        //        isActiveCheckboxValue = "False"
        //    }
        //    alert(isActiveCheckboxValue);
        //}

        function Delete(data) {
            //console.log(data);
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        //url: url,
                        //type: 'DELETE',
                        url: "/sa/UserInRole/delete/",
                        data: { "id": data },
                        type: "DELETE",
                        success: function (data) {
                            if (data.success) {
                                dataTable.ajax.reload();
                                toastr.success(data.message);
                            }
                            else {
                                toastr.error(data.message);
                            }
                        }
                    })
                }
            })
        }

    </script>
}



