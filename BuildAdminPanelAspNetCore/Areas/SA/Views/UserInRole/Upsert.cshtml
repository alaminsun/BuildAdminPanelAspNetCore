@model BuildAdminPanelAspNetCore.Areas.SA.Models.BEL.UserInRoleBEL
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<form method="post" asp-action="Upsert" enctype="multipart/form-data">
    @*<input asp-for="UserID" hidden />*@
    <div class="border p-3 mt-4 row">
        @*    <div class="card">*@
        <div class="card-header">
            <h4 class="text-primary">@(Model.UserID != null ? "Update" : "Create") UserInRole</h4>
        </div>
        <div class="card-body">
            <div class="form-row">
                <div class="form-group">
                    <label asp-for="UserID" class="form-label mt-4">UserID</label>
                    <input asp-for="UserID" type="text" class="form-control">
                    <span asp-validation-for="UserID" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password" class="form-label mt-4">Password</label>
                    <input asp-for="Password" type="text" id="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConfirmPassword" class="form-label mt-4"></label>
                    <input asp-for="ConfirmPassword" id="ConfirmPassword" type="text" class="form-control" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    <span id="passwordMatch"></span>
                </div>
            </div>
            <div class="form-row">
            <div class="form-group">
<<<<<<< HEAD

                <label for="RoleID" class="form-label mt-4">Role</label>
                    <select class="form-control select2" style="width: 100%;" id="RoleID" name="RoleID">
                    <option value="">---Select Role---</option>
                  </select>
            </div>
                <div class="form-group">
                    <label asp-for="EmpID" class="form-label mt-4">Employee</label>
                    <select class="form-select select2" style="width: 100%;" id="EmpID">
                       <option value="">---Select Employee---</option>
=======
                    <label asp-for="RoleID" class="form-label mt-4">Role</label>
                    <select class="form-select" id="RoleID">
                    <option>1</option>
                </select>
            </div>
                <div class="form-group">
                    <label asp-for="EmpID" class="form-label mt-4">Employee</label>
                    <select class="form-select" id="EmpID">
                        <option>1</option>
>>>>>>> 716fb11ee9127f1f4af1e9cd89850d46ee8c358c
                    </select>
                </div>
            </div>
        </div>
        <div class="card-foorter">
            <div class="col-12">
                @if (Model.UserID != null)
                {
                    <button type="submit" class="btn btn-primary" style="width:150px">Update</button>
                }
                else
                {
                    <button type="submit" class="btn btn-primary" style="width:150px">Create</button>
                }
                <a asp-area="SA" asp-controller="Software" asp-action="frmSoftware" class="btn btn-secondary" style="width:150px">
                    Back to List
                </a>
            </div>

        </div>
    </div>
    @*   </div>*@

</form>


@section Scripts{
    @{
    <partial name="_ValidationScriptsPartial" />
    }

    <script>

        $(document).ready(function () {
            // Cache the password and confirm password fields
            var passwordField = $("#Password");
            var confirmPasswordField = $("#ConfirmPassword");
            var passwordMatchMessage = $("#passwordMatch");

            // Add an event listener to the confirmPasswordField
            confirmPasswordField.on('input', function () {
                // Get the values of both password fields
                var password = passwordField.val();
                var confirmPassword = confirmPasswordField.val();

                // Compare the passwords
                if (password === confirmPassword) {
                    passwordMatchMessage.text("Passwords match").css("color", "green");
                } else {
                    passwordMatchMessage.text("Passwords do not match").css("color", "red");
                }
            });
        });
        LoadRole();
        LoadEmployee();
<<<<<<< HEAD
        //Initialize Select2 Elements
        $('.select2').select2()

        ////Initialize Select2 Elements
        $('.select2bs4').select2({
            theme: 'bootstrap4'
        })

=======
        //LoadBuyer();
        $(".select2").select2();
        // function LoadRole() {
        //     $.ajax({
        //         url: '/SA/Role/GetRole',
        //         type: 'GET',
        //         dataType: 'JSON',
        //         data: "{}",
        //         contentType: "application/json; charset=utf-8",
        //         success: function (data) {
        //             $.each(data, function (i, item) {
        //                 console.log(item);
        //                 $('#RoleID').append($('<option>', { value: item.roleID, html: item.roleName }, '<option/>'));
        //             });
        //         }

        //         //,error: function () {
        //         //    alert("Failed to load...");
        //         //}
        //     });
        // }
>>>>>>> 716fb11ee9127f1f4af1e9cd89850d46ee8c358c
        function LoadRole() {
            debugger;
            $.ajax({
                url: '/SA/Role/GetRole',
<<<<<<< HEAD
                success: function (data) {
                    $.each(data.data, function (i, item) {
                        //console.log(item);
                        $('#RoleID').append('<Option value=' + item.roleID + '>' + item.roleName + '</Option>');
=======
                success: function (result) {
                    $.each(result, function (i, data) {
                        $('#RoleID').append('<Option value=' + data.roleID + '>' + data.roleName + '</Option>');
>>>>>>> 716fb11ee9127f1f4af1e9cd89850d46ee8c358c
                    });
                }
            });
        }

        function LoadEmployee() {
            debugger;
            $.ajax({
                url: '/SA/UserInRole/GetEmployeeNotYetAssigned',
                success: function (data) {
                    $.each(data.data, function (i, item) {
                        //console.log(item);
                        $('#EmpID').append($('<option>', { value: item.empID, html: item.empName }, '<option/>'));
                    });
                }
            });
        }
        $('#RoleID').change(function () {
            //$('#State').attr('disabled', false);
            var id = $(this).val();
            $('#EmpID').empty();
            //$('#EmpID').append('<Option>--Select Employee--</Option>');
            $.ajax({
                //url: '/Cascade/State?id=' + id,
                url: '/SA/UserInRole/GetEmployeeNotYetAssigned?roleId=' + id,
                success: function (data) {
                    $.each(data.data, function (i, item) {
                        $('#EmpID').append('<Option value=' + item.empID + '>' + item.empName + '</Option>');
                    });
                }
            });
        });
    </script>
  }



